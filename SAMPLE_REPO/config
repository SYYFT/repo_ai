from snowflake.connector.pandas_tools import write_pandas
from sqlalchemy import text
from sqlalchemy import create_engine
from snowflake.sqlalchemy import URL
from datetime import datetime 
import pandas as pd
import base64


# ------------------------------------- credentials
CLIENT_ID = 'XXXXXXXXXXXXXXXXXXXXXXXXXXX'
SECRET = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1234567'
ORGID = 321123


credentials = f"{CLIENT_ID}:{SECRET}"
encoded_credentials = base64.b64encode(credentials.encode("utf-8")).decode("utf-8")
headers = {
    "Authorization": f"Basic {encoded_credentials}",
    "Accept": "application/json, text/plain, */*",
    "Content-Type": "application/json"
}


# ------------------------- URLs for endpoints
base_url_user_course_activity = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/analytics/user-course-activity/"
base_url_user_activity = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/analytics/user-activity/"
base_url_learning_activity_attempt = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/analytics/learning-activity-attempt/summary/"
base_url_user_assessment_activity = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/analytics/user-assessment-activity/"
base_url_user_path_activity = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/analytics/user-path-activity/"
base_url_user_lab_activity = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/analytics/user-lab-activity/"
base_url_courses_list = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/courses/list/"
base_url_learning_activity_attempt = f"https://aarete.udemy.com/api-2.0/organizations/{ORGID}/analytics/learning-activity-attempt/summary/"

#---------------------------------- insert into Snowflake 

def insert_log_audit(engine, audit_sid, function_name, process, pyscript, pymessage, status):
    """ Inserts an entry into the UDEMY_LOG_AUDIT table for tracking ETL operations. """
    log_entry = pd.DataFrame([{
        'AUDIT_SID': audit_sid,
        'FUNCTION_NAME': function_name,
        'PROCESS': process,
        'PYSCRIPT': pyscript,
        'PYMESSAGE': pymessage,
        'STATUS': status,
        'TIMESTAMP': datetime.now()
    }])

    try:
        log_entry.to_sql('udmy_log_audit', engine, schema='STG', if_exists='append', index=False)
        print(f"Log entry added to UDMY_LOG_AUDIT with AUDIT_SID {audit_sid}.")
    except Exception as e:
        print(f"Failed to insert log entry: {e}")


def get_audit_sid(engine):
    """ Retrieves the current maximum audit_sid from the UDEMY_LOG_AUDIT table and increments it for the next insert.    """
    
    query = text("SELECT COALESCE(MAX(AUDIT_SID), 0) + 1 AS next_audit_sid FROM FIN_ANALYTICS.STG.UDMY_LOG_AUDIT")
    print("Connecting to Snowflake...")
    try:
        with engine.connect() as conn:
            result = conn.execute(query)
            next_id = result.scalar()  # Get the first (and only) row's value
        print("Connection Successful.")    
        print(f"New Audit Sid: {next_id}")
        return next_id
    except Exception as e:
        print(f"FAILD TO RETRIEVE AUDIT_SID: {e}")
        raise

# ------------------------------------ UDEMY TABLES  DATA DICTIONARY 
from sqlalchemy import Table, Column, MetaData, VARCHAR, NUMERIC, DATE, TIMESTAMP, BOOLEAN

USER_ACTIVITY_MODEL = {
            'user_name': VARCHAR,
            'user_surname': VARCHAR,
            'user_email': VARCHAR,
            'user_role': VARCHAR,
            'user_joined_date': DATE,
            'user_external_id': VARCHAR,
            'user_is_deactivated': VARCHAR,
            'num_new_enrolled_courses': NUMERIC(38, 0),
            'num_new_assigned_courses': NUMERIC(38, 0),
            'num_new_started_courses': NUMERIC(38, 0),
            'num_completed_courses': NUMERIC(38, 0),
            'num_completed_lectures': NUMERIC(38, 0),
            'num_completed_quizzes': NUMERIC(38, 0),
            'num_video_consumed_minutes': NUMERIC(38, 2),
            'num_web_visited_days': NUMERIC(38, 0),
            'last_date_visit': DATE, 
            'audit_sid': NUMERIC(38,0),
            'load_dt': TIMESTAMP
}

USER_ASSESSMENT_ACTIVITY_MODEL = {
    'user_id': NUMERIC(38,0),
    'user_name': VARCHAR,
    'user_surname': VARCHAR,
    'user_email': VARCHAR,
    'user_role': VARCHAR,
    'user_external_id': VARCHAR,
    'assessment_id': NUMERIC(38,0),
    'assessment_title': VARCHAR,
    'assigned_by': VARCHAR,
    'assigned_on': DATE,
    'assigned_due_date': DATE,
    'number_of_attempts': NUMERIC(38,0),
    'number_of_completed': NUMERIC(38,0),
    'last_activity_date': DATE,
    'total_time_spent': NUMERIC(38,2),
    'interacted_with_guidance': VARCHAR,
    'highest_proficiency_level': VARCHAR,
    'audit_sid': NUMERIC(38,0),
    'load_dt': TIMESTAMP
}

USER_COURSE_ACTIVITY_MODEL = {
    'user_id': NUMERIC(38,0),
    'user_name': VARCHAR,
    'user_surname': VARCHAR,
    'user_email': VARCHAR,
    'user_role': VARCHAR,
    'user_external_id': VARCHAR,
    'course_id': NUMERIC(38,0),
    'course_title': VARCHAR,
    'course_category': VARCHAR,
    'course_duration': NUMERIC(38,0),
    'completion_ratio': NUMERIC(38,0),
    'num_video_consumed_minutes': NUMERIC(38,0),  
    'course_enroll_date': DATE,
    'course_start_date': DATE,
    'course_completion_date': DATE,
    'course_first_completion_date': DATE,
    'course_last_accessed_date': DATE,
    'last_activity_date': DATE,
    'is_assigned': VARCHAR,
    'assigned_by': VARCHAR,
    'user_is_deactivated': BOOLEAN,
    'lms_user_id': VARCHAR,
    'audit_sid': NUMERIC(38,0),
    'load_dt': TIMESTAMP
}

USER_LAB_ACTIVITY_MODEL = {
    'user_id': NUMERIC(38,0),
    'user_name': VARCHAR,
    'user_surname': VARCHAR,
    'user_email': VARCHAR,
    'user_role': VARCHAR,
    'user_external_id': VARCHAR,
    'lab_id': NUMERIC(38,0),
    'lab_title': VARCHAR,
    'lab_started': BOOLEAN,
    'lab_completed': BOOLEAN,
    'last_activity_date': DATE,
    'total_time_spent': NUMERIC(38,2),
    'lab_assigned_on': DATE,
    'lab_assigned_due_date': DATE,
    'lab_assigned_by': VARCHAR,
    'audit_sid': NUMERIC(38,0),
    'load_dt': TIMESTAMP
}

USER_PATH_ACTIVITY_MODEL = {
    'user_id': NUMERIC(38,0),
    'user_name': VARCHAR,
    'user_surname': VARCHAR,
    'user_email': VARCHAR,
    'user_role': VARCHAR,
    'user_external_id': VARCHAR,
    'lms_user_id': NUMERIC(38,0),
    'path_id': NUMERIC(38,0),
    'path_title': VARCHAR,
    'is_pro_path': BOOLEAN,
    'is_private_path': BOOLEAN,
    'completion_ratio': NUMERIC(38,2),
    'path_enrolled_date': DATE,
    'path_consumed_minutes': NUMERIC(38,2),
    'path_completion_date': DATE,
    'is_path_assigned': BOOLEAN,
    'path_assigned_on': DATE,
    'path_assigned_due_date': DATE,
    'path_assigned_by': VARCHAR,
    'path_first_activity_date': DATE,
    'path_last_activity_date': DATE,
    'audit_sid': NUMERIC(38,0),
    'load_dt': TIMESTAMP
}

USER_LEARNING_ACTIVITY_ATTEMPT_MODEL = {
    'user_name': VARCHAR,
    'user_surname': VARCHAR,
    'user_email': VARCHAR,
    'user_role': VARCHAR,
    'user_external_id': VARCHAR,
    'user_is_deactivated': BOOLEAN,
    'course_id': NUMERIC(38,0),
    'course_title': VARCHAR,
    'course_category': VARCHAR,
    'item_id': NUMERIC(38,0),
    'item_title': VARCHAR,
    'item_type': VARCHAR,
    'item_start_time': DATE,
    'item_completion_time': DATE,
    'item_views': NUMERIC(38,0),
    'item_completion_ratio': NUMERIC(38,2),
    'item_final_result': NUMERIC(38,0),
    'item_marked_complete': BOOLEAN,
    'audit_sid': NUMERIC(38,0),
    'load_dt': TIMESTAMP
}

UDMY_USER_ACTIVITY_TABLE = 'udmy_user_activity'
UDMY_USER_PATH_ACTIVITY_TABLE = 'udmy_user_path_activity'
UDMY_USER_ASSESSMENT_ACTIVITY_TABLE = 'udmy_user_assessment_activity'
UDMY_USER_COURSE_ACTIVITY_TABLE = 'udmy_user_course_activity'
UDMY_USER_LEARNING_ACTIVITY_ATTEMPT_TABLE = 'udmy_user_learning_activity_attempt'
UDMY_USER_LAB_ACTIVITY_TABLE = 'udmy_user_lab_activity'